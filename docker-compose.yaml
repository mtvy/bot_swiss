version: '3.3'

services:
  postgres:
    image: postgres:13.3
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
      - -p 5433
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./setup/database:/docker-entrypoint-initdb.d
      - ./setup:/var/lib/postgresql/data
    ports:
      - "5433:5433"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - default
    
  postgres_exporter:
    container_name: exporter_container
    image: prometheuscommunity/postgres-exporter:v0.10.0
    environment:
      DATA_SOURCE_URI: "postgres:5433/postgres?sslmode=disable"
      DATA_SOURCE_USER: "postgres"
      DATA_SOURCE_PASS: "postgres"
      PG_EXPORTER_EXTEND_QUERY_PATH: "/postgres_exporter/queries.yaml"
    volumes:
      - ./setup/queries.yaml:/postgres_exporter/queries.yaml:ro
    ports:
      - "9187:9187"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M
    networks:
      - default

  bs_grafana:
    image: grafana/grafana
    user: root
    command: 
      - "GF_SERVER_HTTP_PORT=2999"
      - "-p 2999:2999"
    ports:
      - 2999:2999
    volumes:
      - ./setup/grafana:/var/lib/grafana
      - ./setup/grafana/provisioning/:/etc/grafana/provisioning/
    container_name: bs_grafana
    hostname: grafana
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - default

  bot:
    build: ./
    ports:
      - "443:443"
    restart: always
    links:
      - postgres
      - postgres_exporter
      - bs_grafana
    networks:
      - default

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: 172.27.0.0/16